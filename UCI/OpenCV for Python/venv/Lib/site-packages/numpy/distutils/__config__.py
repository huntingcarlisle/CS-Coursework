# This file is generated by numpy's setup.py
# It contains system_info results at the time of building this package.
__all__ = ["get_info","show"]



import os
import sys

extra_dll_dir = os.path.join(os.path.dirname(__file__), '.libs')

if os.path.isdir(extra_dll_dir) and sys.platform == 'win32':
    try:
        from ctypes import windll, c_wchar_p
        _AddDllDirectory = windll.kernel32.AddDllDirectory
        _AddDllDirectory.argtypes = [c_wchar_p]
        # Needed to initialize AddDllDirectory modifications
        windll.kernel32.SetDefaultDllDirectories(0x1000)
    except AttributeError:
        def _AddDllDirectory(dll_directory):
            os.environ.setdefault('PATH', '')
            os.environ['PATH'] += os.pathsep + dll_directory

    _AddDllDirectory(extra_dll_dir)

blas_mkl_info={'libraries': ['mkl_blas95', 'mkl_lapack95', 'mkl_rt'], 'library_dirs': ['C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2018/windows/mkl/lib/ia32_win'], 'define_macros': [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)], 'include_dirs': ['C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2018/windows/mkl/include']}
blas_opt_info={'libraries': ['mkl_blas95', 'mkl_lapack95', 'mkl_rt'], 'library_dirs': ['C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2018/windows/mkl/lib/ia32_win'], 'define_macros': [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)], 'include_dirs': ['C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2018/windows/mkl/include']}
lapack_mkl_info={'libraries': ['mkl_blas95', 'mkl_lapack95', 'mkl_rt'], 'library_dirs': ['C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2018/windows/mkl/lib/ia32_win'], 'define_macros': [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)], 'include_dirs': ['C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2018/windows/mkl/include']}
lapack_opt_info={'libraries': ['mkl_blas95', 'mkl_lapack95', 'mkl_rt'], 'library_dirs': ['C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2018/windows/mkl/lib/ia32_win'], 'define_macros': [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)], 'include_dirs': ['C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2018/windows/mkl/include']}

def get_info(name):
    g = globals()
    return g.get(name, g.get(name + "_info", {}))

def show():
    for name,info_dict in globals().items():
        if name[0] == "_" or type(info_dict) is not type({}): continue
        print(name + ":")
        if not info_dict:
            print("  NOT AVAILABLE")
        for k,v in info_dict.items():
            v = str(v)
            if k == "sources" and len(v) > 200:
                v = v[:60] + " ...\n... " + v[-60:]
            print("    %s = %s" % (k,v))
    